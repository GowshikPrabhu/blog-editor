{"version":3,"sources":["services/uploadImage.js","components/editor-configs.js","services/editor-setup.js","services/download.js","components/HTMLEditor.js","App.js","reportWebVitals.js","index.js"],"names":["postToImgbb","base64str","filename","Promise","resolve","reject","payload","querystring","stringify","image","options","hostname","method","timeout","path","process","REACT_APP_IMGBB_API_KEY","headers","Accept","length","req","https","request","res","response","on","d","json","JSON","parse","status","success","status_code","output","data","err","console","log","write","end","imageUploadHandler","blobInfo","failure","progress","a","date","Date","ms","getMilliseconds","toString","concat","base64string","base64","then","display_url","catch","code","status_text","message","error","PLUGINS","TOOLBAR","name","items","editorSetup","editor","ui","registry","addIcon","addToggleButton","icon","tooltip","onAction","doc","editorManager","editors","contentWindow","document","body","classList","contains","remove","add","addButton","text","element","createElement","setAttribute","encodeURIComponent","style","display","appendChild","click","removeChild","download","getContent","HTMLEditor","initialValue","init","height","menubar","browser_spellcheck","plugins","external_plugins","tiny_mce_wiris","font_formats","toolbar","autosave_ask_before_unload","autosave_interval","toolbar_sticky","toolbar_mode","quickbars_selection_toolbar","skin","images_upload_handler","codesample_content_css","setup","content_css","templates","title","description","url","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"qUASMA,EAAc,SAACC,EAAWC,GAAZ,OAClB,IAAIC,SAAQ,SAACC,EAASC,GACpB,IAAMC,EAAUC,IAAYC,UAAU,CACpCC,MAAOR,IAGHS,EAAU,CACdC,SAAU,gBACVC,OAAQ,OACRC,QAAS,IACTC,KAAK,iBAAD,OAAmBC,+IAAYC,wBAA/B,iBAA+Dd,GACnEe,QAAS,CACPC,OAAQ,mBACR,eAAgB,oCAChB,iBAAkBZ,EAAQa,SAIxBC,EAAMC,IACTC,QAAQZ,GAAS,SAACa,GACjB,IAAIC,EAAW,GAEfD,EAAIE,GAAG,QAAQ,SAACC,GACdF,GAAYE,KAGdH,EAAIE,GAAG,OAAO,WACZ,IAAME,EAAOC,KAAKC,MAAML,GAExB,GACkB,MAAhBG,EAAKG,SACY,IAAjBH,EAAKI,SACgB,MAArBJ,EAAKK,YACL,CACA,IAAMC,EAASN,EAAKO,KACpB9B,EAAQ6B,QAER5B,EAAOsB,SAIZF,GAAG,SAAS,SAACU,GACZC,QAAQC,IAAIF,GACZ9B,EAAO8B,MAGXf,EAAIkB,MAAMhC,GAEVc,EAAImB,UAwBOC,EArBS,uCAAG,WAAOC,EAAUV,EAASW,EAASC,GAAnC,qBAAAC,EAAA,sDACrB1C,EAAWuC,EAASvC,WACpB2C,EAAO,IAAIC,KACXC,EAAKF,EAAKG,kBACd9C,EAAW6C,EAAGE,WAAWC,OAAOhD,GAE1BiD,EAAeV,EAASW,SAC9BpD,EAAYmD,EAAcjD,GACvBmD,MAAK,SAAC9B,GACLa,QAAQC,IAAId,GACZQ,EAAQR,EAAI+B,gBAEbC,OAAM,SAACpB,GACNC,QAAQC,IAAI,SAAUF,GACtB,IAAIqB,EAAOrB,EAAIL,QAAUK,EAAIH,aAAe,IACxCyB,EAActB,EAAIsB,aAAe,cACjCC,EAAUvB,EAAIwB,MAAMD,SAAW,sBACnChB,EAAQ,GAAD,OAAIe,EAAJ,YAAmBD,EAAnB,aAA4BE,OAjBd,2CAAH,4DC5DXE,EAAU,CACrB,8CACA,6CACA,iDACA,wDACA,kDACA,iDACA,gDAGWC,EAAU,CACrB,CACEC,KAAM,UACNC,MAAO,CAAC,OAAQ,SAElB,CACED,KAAM,OACNC,MAAO,CAAC,aAAc,iBAAkB,iBAE1C,CACED,KAAM,aACNC,MAAO,CACL,OACA,SACA,YACA,gBACA,YACA,YACA,eACA,cACA,cAGJ,CACED,KAAM,YACNC,MAAO,CAAC,YAAa,cAAe,aAAc,iBAEpD,CACED,KAAM,cACNC,MAAO,CAAC,UAAW,WAErB,CAAED,KAAM,QAASC,MAAO,CAAC,UAAW,YACpC,CACED,KAAM,WACNC,MAAO,CAAC,QAAS,OAAQ,SAAU,aAAc,eAEnD,CACED,KAAM,OACNC,MAAO,CACL,YACA,OACA,aACA,WACA,gBACA,+BACA,qBCjDOC,EAAc,SAACC,GAC1BA,EAAOC,GAAGC,SAASC,QACjB,aACA,iQAGFH,EAAOC,GAAGC,SAASE,gBAAgB,gBAAiB,CAClDC,KAAM,aACNC,QAAS,0BACTC,SAAU,WACR,IAAIC,EAAMR,EAAOS,cAAcC,QAAQ,GAAGC,cAAcC,SAC3CJ,EAAIK,KAAKC,UAAUC,SAAS,cAEvCP,EAAIK,KAAKC,UAAUE,OAAO,cAE1BR,EAAIK,KAAKC,UAAUG,IAAI,iBAI7BjB,EAAOC,GAAGC,SAASgB,UAAU,kBAAmB,CAC9Cb,KAAM,eACNC,QAAS,mBACTC,SAAU,YC5BU,SAACtE,EAAUkF,GACjC,IAAIC,EAAUR,SAASS,cAAc,KACrCD,EAAQE,aACN,OACA,iCAAmCC,mBAAmBJ,IAExDC,EAAQE,aAAa,WAAYrF,GAEjCmF,EAAQI,MAAMC,QAAU,OACxBb,SAASC,KAAKa,YAAYN,GAE1BA,EAAQO,QAERf,SAASC,KAAKe,YAAYR,GDiBtBS,CAAS,eADQ7B,EAAO8B,kBEkBfC,EAzCI,WAGjB,OACE,cAAC,IAAD,CACEC,aAAa,oBACbC,KAAM,CACJC,OAAQ,QACRC,SAAS,EACTC,oBAAoB,EACpBC,QAAS1C,EACT2C,iBAAkB,CAChBC,eACE,yDAEJC,aHyCN,uLGxCMC,QAAS7C,EACT8C,4BAA4B,EAC5BC,kBAAmB,MACnBC,gBAAgB,EAChBC,aAAc,UACdC,4BACE,gDACFC,KAA8B,QAC9BC,sBAAuBzE,EACvB0E,uBACE,iDACFC,MAAOnD,EACPoD,YAAa,2BACbC,UAAW,CACT,CACEC,MAAO,QACPC,YAAa,qBACbC,IAAK,sCC5BFC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxE,MAAK,YAAkD,IAA/CyE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxD,SAASyD,eAAe,SAM1BX,M","file":"static/js/main.83ff151b.chunk.js","sourcesContent":["import https from 'https';\nimport querystring from 'querystring';\n\n/**\n * @description Upload the image to imgbb\n * @param {string} apiKey - Your imgBB API key\n * @param {string} base64string - Typically, the output of fileToString(\"path\") function\n * @returns {Promise}\n */\nconst postToImgbb = (base64str, filename) =>\n  new Promise((resolve, reject) => {\n    const payload = querystring.stringify({\n      image: base64str\n    });\n\n    const options = {\n      hostname: 'api.imgbb.com',\n      method: 'POST',\n      timeout: 5000,\n      path: `/1/upload?key=${process.env.REACT_APP_IMGBB_API_KEY}&name=${filename}`,\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Content-Length': payload.length\n      }\n    };\n\n    const req = https\n      .request(options, (res) => {\n        let response = '';\n\n        res.on('data', (d) => {\n          response += d;\n        });\n\n        res.on('end', () => {\n          const json = JSON.parse(response);\n\n          if (\n            json.status === 200 ||\n            json.success === true ||\n            json.status_code === 200\n          ) {\n            const output = json.data;\n            resolve(output);\n          } else {\n            reject(json);\n          }\n        });\n      })\n      .on('error', (err) => {\n        console.log(err);\n        reject(err);\n      });\n\n    req.write(payload);\n\n    req.end();\n  });\n\nconst imageUploadHandler = async (blobInfo, success, failure, progress) => {\n  let filename = blobInfo.filename();\n  let date = new Date();\n  let ms = date.getMilliseconds();\n  filename = ms.toString().concat(filename);\n\n  const base64string = blobInfo.base64();\n  postToImgbb(base64string, filename)\n    .then((res) => {\n      console.log(res);\n      success(res.display_url);\n    })\n    .catch((err) => {\n      console.log('Failed', err);\n      let code = err.status || err.status_code || 400;\n      let status_text = err.status_text || 'Bad request';\n      let message = err.error.message || 'Cannot upload image';\n      failure(`${status_text} ${code}: ${message}`);\n    });\n};\n\nexport default imageUploadHandler;\n","export const PLUGINS = [\n  'print preview paste importcss searchreplace',\n  'autolink autosave save directionality code',\n  'visualblocks visualchars fullscreen image link',\n  'media template codesample table charmap hr blockquote',\n  'pagebreak nonbreaking anchor toc insertdatetime',\n  'advlist lists wordcount imagetools textpattern',\n  'noneditable help charmap quickbars emoticons'\n];\n\nexport const TOOLBAR = [\n  {\n    name: 'history',\n    items: ['undo', 'redo']\n  },\n  {\n    name: 'font',\n    items: ['fontselect', 'fontsizeselect', 'formatselect']\n  },\n  {\n    name: 'formatting',\n    items: [\n      'bold',\n      'italic',\n      'underline',\n      'strikethrough',\n      'forecolor',\n      'backcolor',\n      'removeformat',\n      'superscript',\n      'subscript'\n    ]\n  },\n  {\n    name: 'alignment',\n    items: ['alignleft', 'aligncenter', 'alignright', 'alignjustify']\n  },\n  {\n    name: 'indentation',\n    items: ['outdent', 'indent']\n  },\n  { name: 'lists', items: ['numlist', 'bullist'] },\n  {\n    name: 'elements',\n    items: ['image', 'link', 'anchor', 'codesample', 'blockquote']\n  },\n  {\n    name: 'misc',\n    items: [\n      'emoticons',\n      'code',\n      'fullscreen',\n      'template',\n      'toggleContent',\n      'tiny_mce_wiris_formulaEditor',\n      'downloadContent'\n    ]\n  }\n];\n\nexport const FONT_FORMATS =\n  // eslint-disable-next-line no-multi-str\n  'Arial=arial,liberation-sans,helvetica,sans-serif;Courier New=courier new,courier;\\\n  Georgia=georgia,palatino;Liberation Sans=liberation-sans,sans-serif;Roboto Slab=Roboto Slab,serif';\n","import { download } from './download';\n\n/**\n * Setup configuration for editor\n * @param {*} editor Editor instance\n */\nexport const editorSetup = (editor) => {\n  editor.ui.registry.addIcon(\n    'dark-light',\n    '<svg width=\"24\" height=\"24\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M8 256c0 136.966 111.033 248 248 248s248-111.034 248-248S392.966 8 256 8 8 119.033 8 256zm248 184V72c101.705 0 184 82.311 184 184 0 101.705-82.311 184-184 184z\"></path></svg>'\n  );\n\n  editor.ui.registry.addToggleButton('toggleContent', {\n    icon: 'dark-light',\n    tooltip: 'Toggle dark mode on off',\n    onAction: () => {\n      let doc = editor.editorManager.editors[0].contentWindow.document;\n      let isDark = doc.body.classList.contains('dark-theme');\n      if (isDark) {\n        doc.body.classList.remove('dark-theme');\n      } else {\n        doc.body.classList.add('dark-theme');\n      }\n    }\n  });\n  editor.ui.registry.addButton('downloadContent', {\n    icon: 'chevron-down',\n    tooltip: 'Download content',\n    onAction: () => {\n      const contents = editor.getContent();\n      download('content.html', contents);\n    }\n  });\n};\n","export const download = (filename, text) => {\n  var element = document.createElement('a');\n  element.setAttribute(\n    'href',\n    'data:text/plain;charset=utf-8,' + encodeURIComponent(text)\n  );\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n};\n","import React from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport imageUploadHandler from '../services/uploadImage';\nimport { FONT_FORMATS, PLUGINS, TOOLBAR } from './editor-configs';\nimport { editorSetup } from '../services/editor-setup';\n\nconst HTMLEditor = () => {\n  const isDark = false;\n\n  return (\n    <Editor\n      initialValue='Start typing here'\n      init={{\n        height: '100vh',\n        menubar: true,\n        browser_spellcheck: false,\n        plugins: PLUGINS,\n        external_plugins: {\n          tiny_mce_wiris:\n            'https://www.wiris.net/demo/plugins/tiny_mce/plugin.js'\n        },\n        font_formats: FONT_FORMATS,\n        toolbar: TOOLBAR,\n        autosave_ask_before_unload: true,\n        autosave_interval: '30s',\n        toolbar_sticky: true,\n        toolbar_mode: 'sliding',\n        quickbars_selection_toolbar:\n          'bold italic | quicklink quickimage quicktable',\n        skin: isDark ? 'oxide-dark' : 'oxide',\n        images_upload_handler: imageUploadHandler,\n        codesample_content_css:\n          'http://ourcodeworld.com/material/css/prism.css',\n        setup: editorSetup,\n        content_css: '/tinymce/css/content.css',\n        templates: [\n          {\n            title: 'Table',\n            description: 'Fixed header table',\n            url: '/tinymce/templates/table.html'\n          }\n        ]\n      }}\n    />\n  );\n};\n\nexport default HTMLEditor;\n","import './App.css';\nimport HTMLEditor from './components/HTMLEditor';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <HTMLEditor />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'fontsource-roboto-slab';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}